{"version":3,"sources":["/home/ilia/code/StateMachine/StateMachine.ts"],"names":["StateMachine","StateMachine.isUndefined","StateMachine.State","StateMachine.State.constructor","StateMachine.State._makeEventMethodFn","StateMachine.State._makeEventHandlerFn","StateMachine.State.on","StateMachine.StateMachine","StateMachine.StateMachine.constructor","StateMachine.StateMachine.initialize","StateMachine.StateMachine.state","StateMachine.StateMachine.current","StateMachine.StateMachine.go"],"mappings":"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","file":"StateMachine.js","sourcesContent":["module StateMachine {\n\n  var reserved = [\"state\", \"go\", \"initialize\", \"current\"];\n\n  function isUndefined(x) {\n    return typeof x === \"undefined\";\n  }\n\n  export interface EventHandler {\n    (...any): any;\n  }\n\n  export class State {\n\n    _sm:     StateMachine;\n    _name:   string;\n    _events: any;\n    _enter:  Array<EventHandler>;\n    _exit:   Array<EventHandler>;\n\n    /**\n     * a single state\n     *\n     * @class State\n     * @param sm - state machine\n     * @param name - state name\n     */\n    constructor(sm: StateMachine, name: string) {\n      this._sm     = sm;\n      this._name   = name;\n      this._events = {};\n      this._enter  = [];\n      this._exit   = [];\n    }\n\n    /**\n     * create a function for invoking an event\n     *\n     * @method _makeEventMethodfn\n     * @private\n     * @param {string} event - event name\n     * @return {function}\n     */\n    private _makeEventMethodFn(event: string): { (): void } {\n      var sm      = this._sm,\n          verbose = sm._options.verbose,\n          name    = sm._options.name,\n          logEx   = sm._options.logExceptions;\n      return () => {\n        var state = sm._current,\n            args  = arguments,\n            events;\n        if (state === null) {\n          throw new Error(\"the state machine has not been initialized\");\n        }\n        events = state._events;\n        if (!events.hasOwnProperty(event)) {\n          throw new Error(\n            event + \" event not defined for \" + state._name + \" state\"\n          );\n        }\n        if (verbose) {\n          console.log(name + \": \" + state._name + \".\" + event);\n        }\n        if (logEx) {\n          try {\n            events[event].forEach(function (fn) {\n              fn.apply(sm, args);\n            });\n          } catch (e) {\n            console.log(name + \": \" + state._name + \" ! \" + e.message);\n            throw e;\n          }\n        } else {\n          events[event].forEach(function (fn) {\n            fn.apply(sm, args);\n          });\n        }\n        return sm;\n      };\n    }\n\n    /**\n     * convert an event handler parameter to a function\n     *\n     * @method _makeEventHandlerFn\n     * @private\n     * @param {function|string|undefined} x - handler\n     * @return {function}\n     */\n    private _makeEventHandlerFn(x) {\n      var sm       = this._sm,\n          toString = Object.prototype.toString;\n      if (toString.call(x) === '[object Function]') {\n        return x;\n      }\n      if (typeof x === \"string\") {\n        return () => sm.go(x);\n      }\n      if (typeof x === \"undefined\") {\n        return () => undefined;\n      }\n      throw new Error(\"invalid event handler\");\n    }\n\n    /**\n     * register a state event and add the event method\n     * to the state machine instance\n     *\n     * Note:\n     *\n     *  `enter` and `exit` are special events.\n     *  event methods do not get defined for them.\n     *  they are executed when the state machine is\n     *  entering or exiting that state.\n     *\n     * @method on\n     * @param {string} event - event name\n     * @param {function|string} handler - event callback function or state name\n     * @return {State} state \n     */\n    on(event, handler) {\n      var events = this._events,\n          sm     = this._sm,\n          fn     = this._makeEventHandlerFn(handler);\n      switch (event) {\n        case \"enter\":\n          this._enter.push(fn);\n          break;\n        case \"exit\":\n          this._exit.push(fn);\n          break;\n        default:\n          if (reserved.indexOf(event) !== -1) {\n            throw new Error(event + \" method is reserved for the api\");\n          };\n          if (!events.hasOwnProperty(event)) {\n            events[event] = [];\n          }\n          events[event].push(fn);\n          if (!sm.hasOwnProperty(event)) {\n            sm[event] = this._makeEventMethodFn(event);\n          }\n          break;\n      }\n      return this;\n    }\n\n  }\n\n  export interface Options {\n    name?:          string;\n    verbose?:       boolean;\n    logExceptions?: boolean;\n  }\n\n  export class StateMachine {\n\n    _states:  { [name: string]: State };\n    _current: State;\n    _options: Options;\n\n    /**\n     * Simple State Machine\n     *\n     * @class StateMachine\n     * @param {object}  options\n     * @param {boolean} options.verbose\n     * @param {string}  options.name\n     */\n    constructor(options: Options) {\n      this._states  = {};\n      this._current = null;\n\n      if (isUndefined(options)) {\n        options = {};\n      }\n      if (isUndefined(options.verbose)) {\n        options.verbose = false;\n      }\n      if (isUndefined(options.name)) {\n        options.name = \"StateMachine\";\n      }\n      if (isUndefined(options.logExceptions)) {\n        options.logExceptions = false;\n      }\n      this._options = options;\n    }\n\n    /**\n     * Initializes the state machine to an initial state.\n     * trying to invoke event methods before initializing\n     * will result in an `Error` being thrown\n     *\n     * @method initialize\n     * @param {string} name - initial state name\n     * @return {StateMachine} state machine\n     */\n    initialize(name) {\n      var states = this._states;\n      if (isUndefined(states[name])) {\n        throw new Error(name + \" state is not defined\");\n      }\n      this._current = states[name];\n      return this;\n    }\n\n    /**\n     * Creates or gets existing State\n     *\n     * @method state\n     * @param {string} name - state name\n     * @return {State} state specified by name\n     */\n    state(name) {\n      var states = this._states;\n      if (!states.hasOwnProperty(name)) {\n        states[name] = new State(this, name);\n      }\n      return states[name];\n    }\n\n    /**\n     * Gets the name of the current State\n     *\n     * @method current\n     * @return {string} name - current state name\n     */\n    current() {\n      var current = this._current;\n      if (current === null) {\n        throw new Error(\n            \"the state machine has not been initialized\");\n      }\n      return current._name;\n    }\n\n    /**\n     * Go to another state\n     *\n     * @method go\n     * @param {string} name - state to transition to\n     * @return {StateMachine} state machine\n     */\n    go(name) {\n      var state   = this._states[name],\n          current = this._current,\n          execute = fn => fn.call(this);\n      if (isUndefined(state)) {\n        throw new Error(name + \" state does not exist\");\n      }\n      if (current._name !== name) {\n        if (this._options.verbose) {\n          console.log(this._options.name + \": \" + current._name + \" -> \" + name);\n        }\n        current._exit.forEach(execute);\n        this._current = state;\n        state._enter.forEach(execute);\n      }\n      return this;\n    }\n  }\n\n}\n"],"sourceRoot":"/source/"}